<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>$(TargetFrameworksLibrary)</TargetFrameworks>
    <NoWarn>$(NoWarn);CS1591</NoWarn>
    <AssemblyName>NuGet.Build.Tasks.Pack</AssemblyName>
    <RootNamespace>$(AssemblyName)</RootNamespace>
    <Shipping>true</Shipping>
    <PackProject>true</PackProject>
    <PreserveCompilationContext>true</PreserveCompilationContext>
    <XPLATProject>true</XPLATProject>
    <IncludeBuildOutput>false</IncludeBuildOutput>
    <TargetsForTfmSpecificContentInPackage>$(TargetsForTfmSpecificContentInPackage);CreatePackNupkg</TargetsForTfmSpecificContentInPackage>
    <SuppressDependenciesWhenPacking>true</SuppressDependenciesWhenPacking>
    <DevelopmentDependency>true</DevelopmentDependency>
    <Description>NuGet tasks for MSBuild and dotnet pack.</Description>
    <NoWarn>$(NoWarn);NU5100</NoWarn>
    <DepsFileGenerationMode>old</DepsFileGenerationMode>
    <UsePublicApiAnalyzer>false</UsePublicApiAnalyzer>
    </PropertyGroup>

  <ItemGroup>
    <Compile Include="..\NuGet.Build.Tasks\Common\MSBuildLogger.cs" />
    <Compile Include="..\NuGet.Build.Tasks\GetProjectTargetFrameworksTask.cs" />
    <Content Include="NuGet.Build.Tasks.Pack.targets" Pack="true" PackagePath="build;buildCrossTargeting">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\NuGet.Commands\NuGet.Commands.csproj" />
  </ItemGroup>

  <ItemGroup Condition=" '$(TargetFramework)' == '$(NETFXTargetFramework)' ">
    <Reference Include="Microsoft.Build.Utilities.v4.0" Pack="false" />
    <Reference Include="Microsoft.Build.Framework" Pack="false" />
  </ItemGroup>

  <ItemGroup>
    <None Include="$(BuildCommonDirectory)NOTICES.txt" Pack="true" PackagePath="\" />
  </ItemGroup>

  <ItemGroup Condition=" '$(TargetFramework)' != '$(NETFXTargetFramework)' ">
    <PackageReference Include="Microsoft.Build.Framework" ExcludeAssets="runtime" GeneratePathProperty="true" />
    <PackageReference Include="Microsoft.Build.Tasks.Core" ExcludeAssets="runtime" GeneratePathProperty="true" />
    <PackageReference Include="Microsoft.Build.Utilities.Core" ExcludeAssets="runtime" GeneratePathProperty="true" />
  </ItemGroup>

  <ItemGroup>
    <Compile Update="Strings.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Strings.resx</DependentUpon>
    </Compile>
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Update="Strings.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Strings.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>

  <Target
    Name="PublishAndMergePackNupkg"
    AfterTargets="AfterBuild"
    Condition="'$(TargetFramework)' != '' AND '$(IsXPlat)' != 'true' AND '$(BuildingInsideVisualStudio)' != 'true'">
    <MSBuild Projects="$(MSBuildProjectFullPath)" Targets="Publish;ILMergeNuGetPack" />
  </Target>

  <Target Name="ILMergeNuGetPackResourcesPerCulture" DependsOnTargets="Publish">
    <ItemGroup>
      <_PackResourceDlls Include="$(OutputPath)**\$(AssemblyName).resources.dll" />
    </ItemGroup>
    <MSBuild Projects="$(MSBuildProjectFullPath)" Targets="ILMergeNuGetPackResources"
             Properties="CurrentCulture=%(_PackResourceDlls.RecursiveDir);
                         BuildProjectReferences=false">
    </MSBuild>
  </Target>

  <Target Name="ILMergeNuGetPack"
          Condition="'$(TargetFramework)' != ''">
    <ItemGroup>
      <BuildArtifacts Include="$(OutputPath)publish\*.dll" Exclude="$(OutputPath)publish\*Pack.dll" />
    </ItemGroup>
    <Message Text="$(MSBuildProjectName) -&gt; $(PathToMergedNuGetPack)" Importance="High" />
  </Target>


  <Target Name="ILMergeNuGetPackResources"
          Outputs="$(PathToMergedNuGetPackResource)"
          Condition="'$(TargetFramework)' != '' AND '$(CurrentCulture)' != ''">
    <ItemGroup>
      <ResourceArtifacts Include="$(OutputPath)$(CurrentCulture)NuGet*.resources.dll" Exclude="$(OutputPath)$(CurrentCulture)*Pack.resources.dll" />
    </ItemGroup>
    <Message Text="$(MSBuildProjectName) -&gt; $(PathToMergedNuGetPackResource)" Importance="High" />
  </Target>

  <!--These targets help get all the DLLs that are packed in the nuspec to be sent for signing.-->
  <Target Name="GetIlmergeBuildOutput" DependsOnTargets="ILMergeNuGetPackResourcesPerCulture;_GetDllsInOutputDirectory" Returns="@(DllsToSign)">
    <ItemGroup>
      <DllsToSign Include="@(DllsInOutputDir)" KeepDuplicates="false" />
    </ItemGroup>
  </Target>

  <Target Name="_GetDllsInOutputDirectory" Returns="@(DllsInOutputDir)">
    <ItemGroup>
      <DllsInOutputDir Include="$(OutputPath)NuGet*.dll" KeepDuplicates="false">
        <StrongName>MsSharedLib72</StrongName>
        <Authenticode>Microsoft400</Authenticode>
      </DllsInOutputDir>
      <DllsInOutputDir Include="$(OutputPath)NuGet*.xml" KeepDuplicates="false"> <!-- Do I need the other-->
        <Authenticode>MicrosoftXmlSHA2</Authenticode>
      </DllsInOutputDir>
    </ItemGroup>
  </Target>

  <!--These targets help get all the DLLs that are packed in the nuspec to be sent for signing.-->
  <Target Name="GetIlmergeSymbolOutput" Returns="@(SymbolsToIndex)">
    <ItemGroup>
      <SymbolsToIndex Include="$(OutputPath)*.pdb" KeepDuplicates="false" />
    </ItemGroup>
  </Target>

  <Target Name="GetFinalBuildOutput" Returns="@(DllsToIndex)">
    <ItemGroup>
      <DllsToIndex Include="$(OutputPath)NuGet.Build.Tasks.Pack.dll"/>
    </ItemGroup>
  </Target>

  <Target Name="CreatePackNupkg">
    <PropertyGroup>
      <!-- Build from source can't use ILMerge and XPLat builds don't run the ILmerge targets. -->
      <PackagePathDir Condition="'$(TargetFramework)' == '$(NETFXTargetFramework)'">Desktop/</PackagePathDir>
      <PackagePathDir Condition="'$(TargetFramework)' == '$(NetStandardVersion)'">CoreCLR/</PackagePathDir>
    </PropertyGroup>
    <ItemGroup>
      <TfmSpecificPackageFile Include="$(OutputPath)\publish\**\NuGet*.resources.dll">
        <PackagePath>$(PackagePathDir)</PackagePath>
      </TfmSpecificPackageFile>
      <TfmSpecificPackageFile Include="$(OutputPath)\publish\NuGet*.dll">
        <PackagePath>$(PackagePathDir)</PackagePath> <!-- Do I need non-NuGet assemblies?-->
      </TfmSpecificPackageFile>
    </ItemGroup>
  </Target>

  <PropertyGroup>
    <SignTargetsForRealSigning Condition="'$(IsSymbolsBuild)' != 'true'">GetIlmergeBuildOutput</SignTargetsForRealSigning>
    <SymbolTargetsToGetPdbs>GetIlmergeSymbolOutput;GetFinalBuildOutput</SymbolTargetsToGetPdbs>
  </PropertyGroup>
</Project>
