parameters:
- name: isOfficialBuild
  type: boolean
  default: false
- name: DartLabEnvironment
  displayName: DartLab Environment
  type: string
  default: Production
  values:
  - Production
  - Staging
- name: E2EPart1AgentCleanup
  displayName: Delete or keep E2E Part 1 machine for debugging
  type: string
  default: delete
  values:
  - delete
  - stop
- name: E2EPart2AgentCleanup
  displayName: Delete or keep E2E Part 2 machine for debugging
  type: string
  default: delete
  values:
  - delete
  - stop
- name: ApexAgentCleanup
  displayName: Delete or keep VS Apex test machine for debugging
  type: string
  default: delete
  values:
  - delete
  - stop
- name: RunApexTests
  displayName: Run Apex tests
  type: boolean
  default: true
- name: RunEndToEndTests
  displayName: Run end-to-end tests
  type: boolean
  default: true
resources:
  pipelines:
  - pipeline: DartLab
    source: DartLab
    branch: main
  repositories:
  - repository: DartLabTemplates
    type: git
    name: DartLab.Templates
    ref: refs/heads/main

variables:
  BINLOG_DIRECTORY: $(Build.StagingDirectory)/binlog
  DOTNET_NOLOGO: 1
  NUGET_EXPERIMENTAL_CHAIN_BUILD_RETRY_POLICY: 3,1000
  Codeql.Enabled: false
  Codeql.TSAEnabled: false
  RunApexTests: ${{ parameters.RunApexTests }}
  RunEndToEndTests: ${{ parameters.RunEndToEndTests }}

stages:
# Dartlab's template defines this in its own stage
- template: templates/End_To_End_Tests_On_Windows.yml
  parameters:
    stageName: VS_EndToEnd_Part1
    stageDisplayName: Part 1
    condition: "and(succeeded(), ne(variables['RunEndToEndTests'], 'false'))"
    dependsOn:
    - Initialize
    - Build_Insertable
    testExecutionJobTimeoutInMinutes: 100
    bootstrapperUrl: $(VsBootstrapperUrl)
    baseBuildDrop: $(VsBaseBuildDrop)
    runSettingsURI:  https://vsdrop.corp.microsoft.com/file/v1/RunSettings/$(System.TeamProject)/$(Build.Repository.Name)/$(Build.SourceBranchName)/$(Build.BuildId);NuGet.Tests.Apex.runsettings
    DartLabEnvironment: ${{parameters.DartLabEnvironment}}
    variables:
    - name: VsBootstrapperUrl
      value: $[stageDependencies.Build_Insertable.Build_and_UnitTest_NonRTM.outputs['vsbootstrapper.bootstrapperUrl']]
    - name: VsBaseBuildDrop
      value: $[stageDependencies.Build_Insertable.Build_and_UnitTest_NonRTM.outputs['setbasebuilddrop.BaseBuildDrop']]
    - name: QBuildSessionId
      value: $[stageDependencies.Build_Insertable.Build_and_UnitTest_NonRTM.outputs['setcloudbuildsessionid.QBuildSessionId']]
    - name: GitHubStatusName
      value: End_To_End_Tests_On_Windows Part1
    QBuildSessionId: $(QBuildSessionId)
    part: "InstallPackageTest.ps1,UninstallPackageTest.ps1,UpdatePackageTest.ps1"
    testMachineCleanUpStrategy: ${{parameters.E2EPart1AgentCleanup}}

# Dartlab's template defines this in its own stage
- template: templates/End_To_End_Tests_On_Windows.yml
  parameters:
    stageName: VS_EndToEnd_Part2
    stageDisplayName: Part 2
    condition: "and(succeeded(), ne(variables['RunEndToEndTests'], 'false'))"
    dependsOn:
    - Initialize
    - Build_Insertable
    testExecutionJobTimeoutInMinutes: 100
    bootstrapperUrl: $(VsBootstrapperUrl)
    baseBuildDrop: $(VsBaseBuildDrop)
    runSettingsURI:  https://vsdrop.corp.microsoft.com/file/v1/RunSettings/$(System.TeamProject)/$(Build.Repository.Name)/$(Build.SourceBranchName)/$(Build.BuildId);NuGet.Tests.Apex.runsettings
    DartLabEnvironment: ${{parameters.DartLabEnvironment}}
    variables:
    - name: VsBootstrapperUrl
      value: $[stageDependencies.Build_Insertable.Build_and_UnitTest_NonRTM.outputs['vsbootstrapper.bootstrapperUrl']]
    - name: VsBaseBuildDrop
      value: $[stageDependencies.Build_Insertable.Build_and_UnitTest_NonRTM.outputs['setbasebuilddrop.BaseBuildDrop']]
    - name: QBuildSessionId
      value: $[stageDependencies.Build_Insertable.Build_and_UnitTest_NonRTM.outputs['setcloudbuildsessionid.QBuildSessionId']]
    - name: GitHubStatusName
      value: End_To_End_Tests_On_Windows Part2
    QBuildSessionId: $(QBuildSessionId)
    part: "A-TopDownloadedPackages.ps1,BuildIntegratedTest.ps1,ExecuteInitScriptTest.ps1,FindPackageTest.ps1,GetPackageTest.ps1,GetProjectTest.ps1,LegacyPackageRefProjectTest.ps1,NativeProjectTest.ps1,NetCoreProjectTest.ps1,PackTest.ps1,ProjectRetargeting.ps1,ServicesTest.ps1,Settings.ps1,SyncPackageTest.ps1,TabExpansionTest.ps1,UniversalWindowsProjectTest.ps1"
    testMachineCleanUpStrategy: ${{parameters.E2EPart2AgentCleanup}}

# Dartlab's template defines this in its own stage
- template: templates/Apex_Tests_On_Windows.yml
  parameters:
    condition: "and(succeeded(), ne(variables['RunApexTests'], 'false'))"
    dependsOn:
      - Initialize
      - Build_Insertable
    variables:
      - name: VsBootstrapperUrl
        value: $[stageDependencies.Build_Insertable.Build_and_UnitTest_NonRTM.outputs['vsbootstrapper.bootstrapperUrl']]
      - name: VsBaseBuildDrop
        value: $[stageDependencies.Build_Insertable.Build_and_UnitTest_NonRTM.outputs['setbasebuilddrop.BaseBuildDrop']]
      - name: QBuildSessionId
        value: $[stageDependencies.Build_Insertable.Build_and_UnitTest_NonRTM.outputs['setcloudbuildsessionid.QBuildSessionId']]
      - name: GitHubStatusName
        value: Apex Tests On Windows
    isOfficialBuild: ${{parameters.isOfficialBuild}}
    runSettingsURI: https://vsdrop.corp.microsoft.com/file/v1/RunSettings/$(System.TeamProject)/$(Build.Repository.Name)/$(Build.SourceBranchName)/$(Build.BuildId);NuGet.Tests.Apex.runsettings
    dartLabEnvironment: ${{parameters.DartLabEnvironment}}
    testExecutionJobTimeoutInMinutes: 150
    bootstrapperUrl: $(VsBootstrapperUrl)
    baseBuildDrop: $(VsBaseBuildDrop)
    QBuildSessionId: $(QBuildSessionId)
    testMachineCleanUpStrategy: ${{parameters.ApexAgentCleanup}}