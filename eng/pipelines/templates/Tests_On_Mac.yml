# This Yaml Document has been converted by ESAI Yaml Pipeline Conversion Tool.
# Please make sure to check all the converted content, it is your team's responsibility to make sure that the pipeline is still valid and functions as expected.
# The Task 'PublishPipelineArtifact@1' has been converted to an output named 'Publish Test Freeze Dump' in the templateContext section.
# The Task 'PublishPipelineArtifact@1' has been converted to an output named 'Publish binlogs' in the templateContext section.
steps:
- task: DownloadPipelineArtifact@2
  displayName: "Download NuGet.CommandLine.Test artifacts"
  inputs:
    artifactName: "NuGet.CommandLine.Test"
    downloadPath: "$(Build.Repository.LocalPath)/artifacts"
  condition: "and(succeeded(), eq(variables['TestRunDisplayName'], 'Mono Tests'))"
- task: ShellScript@2
  displayName: "Run $(TestRunDisplayName) (continue on error)"
  continueOnError: "true"
  inputs:
    scriptPath: "scripts/funcTests/runFuncTests.sh"
    args: $(TestRunCommandLineArguments)
    disableAutoCwd: "true"
    cwd: "$(Build.Repository.LocalPath)"
  condition: "and(succeeded(), eq(variables['IsOfficialBuild'], 'true'))"
- task: ShellScript@2
  displayName: "Run $(TestRunDisplayName) (stop on error)"
  continueOnError: "false"
  inputs:
    scriptPath: "scripts/funcTests/runFuncTests.sh"
    args: $(TestRunCommandLineArguments)
    disableAutoCwd: "true"
    cwd: "$(Build.Repository.LocalPath)"
  condition: "and(succeeded(), not(eq(variables['IsOfficialBuild'], 'true')))"
- task: PublishTestResults@2
  displayName: "Publish Test Results"
  inputs:
    testRunner: "VSTest"
    testResultsFiles: "*.trx"
    searchFolder: "$(Build.Repository.LocalPath)/build/TestResults"
    testRunTitle: "NuGet.Client $(TestRunDisplayName) On Mac"
  condition: "always()"
- task: PowerShell@2
  displayName: "Initialize Git Commit Status on GitHub"
  inputs:
    targetType: "inline"
    script: |
      . $(Build.Repository.LocalPath)/scripts/utils/PostGitCommitStatus.ps1
      SetCommitStatusForTestResult -PersonalAccessToken $(NuGetLurkerPersonalAccessToken) -VstsPersonalAccessToken $(System.AccessToken) -CommitSha $(Build.SourceVersion) -TestName "$(TestRunDisplayName) On Mac"
    failOnStderr: "true"
  condition: "not(eq(variables['ManualGitHubChecks'], 'false'))"
- task: ComponentGovernanceComponentDetection@0
  displayName: 'Component Detection'